{"version":3,"sources":["Components/ContactForm.js","Components/Filter.js","Components/ContactList.js","App.js","reportWebVitals.js","index.js"],"names":["ContactForm","state","name","number","onSubmit","e","preventDefault","contact","props","newContact","setState","onChange","target","value","this","type","placeholder","pattern","title","required","Component","Filter","filter","ContactList","filteredContacts","handleDelete","map","id","onClick","App","contacts","uuidv4","find","toLowerCase","alert","onFilter","console","log","split","includes","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.107f5f96.chunk.js","sourcesContent":["import { Component } from 'react';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const contact = {\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    };\r\n    this.props.newContact(contact);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  onChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter name\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            value={name}\r\n            required\r\n            onChange={this.onChange}\r\n          />\r\n          Phone number\r\n          <input\r\n            type=\"tel\"\r\n            placeholder=\"Enter phone number\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            value={number}\r\n            onChange={this.onChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","const Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <label>\r\n      Find phone number by name\r\n      <input name=\"filter\" type=\"text\" value={filter} onChange={onChange} />\r\n    </label>\r\n  );\r\n};\r\nexport default Filter;\r\n","const ContactList = ({ filteredContacts, handleDelete }) => {\r\n  return (\r\n    <ul>\r\n      {filteredContacts.map(({ id, name, number }) => (\r\n        <li key={id}>\r\n          {name}: {number}\r\n          <button type=\"button\" onClick={handleDelete} id={`deletebtn:${id}`}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nexport default ContactList;\r\n","import { Component } from 'react';\nimport './App.scss';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport ContactForm from './Components/ContactForm';\nimport Filter from './Components/Filter';\nimport ContactList from './Components/ContactList';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  newContact = ({ name, number }) => {\n    const contact = { name, number, id: uuidv4() };\n\n    const foundContact = this.state.contacts.find(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    foundContact\n      ? alert(`${name} is already in contacts`)\n      : this.setState({ contacts: [...this.state.contacts, contact] });\n  };\n\n  onChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  onFilter = (e) => {\n    console.log(e);\n  };\n\n  handleDelete = ({ target }) => {\n    const id = target.id.split(':')[1];\n    this.setState({\n      contacts: this.state.contacts.filter((contact) => contact.id !== id),\n    });\n  };\n\n  render() {\n    const filteredContacts = this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(this.state.filter.toLowerCase())\n    );\n    return (\n      <div className=\"App-header\">\n        <h1>Phonebook</h1>\n\n        <ContactForm newContact={this.newContact} />\n\n        <h2>Contacts</h2>\n        <Filter filter={this.state.filter} onChange={this.onChange} />\n        <ContactList\n          filteredContacts={filteredContacts}\n          handleDelete={this.handleDelete}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}